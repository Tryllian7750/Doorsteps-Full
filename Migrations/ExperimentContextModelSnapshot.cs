// <auto-generated />
using ExperimentApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace aspnetapp.Migrations
{
    [DbContext(typeof(ExperimentContext))]
    partial class ExperimentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("ExperimentApi.Models.Experiment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("enabled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Experiments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "This is description for Experiment 1",
                            Name = "Experiment 1",
                            enabled = true
                        });
                });

            modelBuilder.Entity("ExperimentApi.Models.FormResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<long>("ExpId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionAnswers")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForemResponses");
                });

            modelBuilder.Entity("ExperimentApi.Models.Question", b =>
                {
                    b.Property<long>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ExpId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionItemList")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionType")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.HasIndex("ExpId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1L,
                            ExpId = 1L,
                            QuestionItemList = "Answer Here",
                            QuestionName = "Make up Sum Question 1",
                            QuestionType = "text"
                        },
                        new
                        {
                            QuestionId = 2L,
                            ExpId = 1L,
                            QuestionItemList = "Answer Here",
                            QuestionName = "Make up Sum Question 2",
                            QuestionType = "text/multi"
                        },
                        new
                        {
                            QuestionId = 3L,
                            ExpId = 1L,
                            QuestionItemList = "item 1, item 2, item 3",
                            QuestionName = "Make up Sum Question 3",
                            QuestionType = "text/select"
                        });
                });

            modelBuilder.Entity("ExperimentApi.Models.Question", b =>
                {
                    b.HasOne("ExperimentApi.Models.Experiment", "Exp")
                        .WithMany("Questions")
                        .HasForeignKey("ExpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__QUestion__Experiment_id__asdE");

                    b.Navigation("Exp");
                });

            modelBuilder.Entity("ExperimentApi.Models.Experiment", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
